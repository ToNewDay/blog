[{"route":"/docs/code-management/FAQ.html","content":" 常见问题 toc 登记代码库一定要用Master或Owner身份吗？不一定，取决于项目对代码库的使用方式。如果后续会用到代码库管理权限，例如启用 分支工作流 CI流水线监听代码推送或MR事件等，需要管理分支或者注册webhook，就需要Master或Owner权限 如果只是为了能够拉到代码，例如代码分析或流水线拉代码插件，那么Developer或Reporter权限就足够。 所有登记的代码库都会受 分支工作流 的管控吗？登记的代码库默认不会受到 分支工作流 相关规则的管控，只有明确地为具体代码库启用 分支工作流 之后，该代码库才会受管控。 项目一定要用 分支工作流 吗？不一定，如果项目并没有用到诸如分支命名规范 拉分支自动创建流水线 MR约束 分支与TAPD强绑定 分支自动删除等等 分支工作流 相关功能，可以不用 分支工作流 ，只用代码库登记功能就可以了。 初始化Git工作流时选了内置工作流，还能修改吗？可以修改。内置Git工作流 例如 GitHub工作流 GitLab工作流 等 是按照业界常见的实践预先定义了一系列分支规则，但这些规则并不是不能改变的。初始化之后，项目管理员仍然可以进行规则增删改，直到符合实际需要。 一定要在 分支管理 界面上拉分支吗？不一定。界面上拉分支只是平台提供的一种方式，但实际上开发同学可以保持原有的本地拉分支 再推送到远端的习惯。 分支注意要符合项目管理员定义的规则，如不符合则分支会被锁定并知会分支负责人 分支规则要求绑定TAPD单，是不是只能在 分支管理 的分支详情里绑定？分支详情里绑定需求单或bug单只是若干操作方式之一。如果是本地拉的分支，可以在commit日志里添加如 story TAPDID 或 bug TAPDID ，push后将自动将分支与相关需求 bug单绑定。 例如 story 123456789 另外，如果分支因缺少绑定需求单而被锁定，除了到分支详情里绑定，还可以在TAPD需求里绑定分支，绑定后分支将自动恢复活跃状态。 分支自动同步的辅助工具是否支持自定义频率？目前不支持自定义，固定为每日同步。 分支类型启用了自动同步，但某个分支想暂停该功能，该怎么做？可以打开分支详情，在操作选项中选择 关闭自动同步 。 ","categorie":"代码管理-FAQ"},{"route":"/docs/code-management/INTRO.html","content":" 代码管理简介 代码管理 旨在协助项目建立和规范团队的研发模式，让团队规范统一，协作更简单。 代码管理 配置灵活，对开发侵入性低。项目管理员可按需启用相关特性，配置之后，绝大多数时候开发人员不需要到平台上操作，仍保持本地拉分支 push分支的习惯，只有特殊情况才需要介入处理 例如分支命名不规范 。 行文中可能会用到术语 代码库 仓库 ，在 代码管理 中，两者意义等同。 代码管理主要功能 代码仓库登记登记代码库及凭证，后续项目中涉及到代码库的地方 如持续集成 代码分析等 可以直接引用。 分支工作流设置 分支工作流 是指项目团队在代码管理方面达成共识的一套规则定义和约束。 分支类型定义 划分不同的分支类型及命名规则，对不符合规则的分支进行锁定，从而帮助团队建立统一的分支规范。 分支与TAPD关联设定 是否要求分支必须绑定TAPD需求单或Bug单？团队可根据实际情况决定。 辅助工具 例如每日自动同步 分支自动删除等辅助工具，在不同分支类型中可按需开启。 MR约束规则定义 可以限定允许往目标分支发起合并请求 MR 的分支类型，不符合要求的MR将被自动阻塞，从而进一步规范研发过程。 拉分支自动创建CI流水线 通过建立分支类型与CI模板的关联，实现拉分支时自动创建CI流水线。 分支拉取或合流过程自定义 如有需要，可以为分支拉取或合流过程增加自定义环节 如审批或触发特殊流水线等 。","categorie":"代码管理-简介"},{"route":"/docs/code-management/api_docs/introduction.html","content":" API文档","categorie":"代码管理-接口文档"},{"route":"/docs/code-management/appendix/git_workflows.html","content":" Git常用工作流简介有关GitHub工作流 GitLab工作流 gitflow等的介绍，可以参考http km.oa.com group csigscm articles show 382679","categorie":"代码管理-附加参考-Git常用工作流简介"},{"route":"/docs/code-management/best_practices/app_multiversion_practice.html","content":" iOS Android PC项目典型规则设置一般iOS Android PC类项目，需要同时维护多个版本，采用像 GitLab多版本发布 的工作流，即分支开发 主干集成 发布分支发布的模式。落地到Coding代码管理中，典型分支规则如下所示。 分支类型设置 分支类型 命名规则 设置建议 备注 开发分支 dev . 非保护分支，开启分支自动同步 分支自动删除。 按团队实情决定是否要求绑定需求单。 Bugfix分支 bugfix . 非保护分支，不开启分支自动同步，开启分支自动删除 按团队实情决定是否要求绑定bug单。 发布分支 release . 保护分支，不开启分支自动同步，不开启分支自动删除 保护分支权限可细化。 临时分支 temp . 非保护分支，不开启分支自动同步，不开启分支自动删除，不要求绑定TAPD 非必须，如无使用场景可不建该类型。用于某些预研 临时验证等，并且不允许合入主干 通过 MR约束 限制 。 MR约束设置 请注意，MR约束要么不配置，如果配置的话需要考虑全面。 允许开发分支和bugfix分支合入主干，不允许临时分支合入主干 发布分支只允许少量bugfix修改，禁止开发分支往发布分支合。 如果其他分支间也有MR的场景，可适当添加规则。 分支版本管理设置开启分支版本管理，如此一来，除主干之外的其他分支都会有各自的归属版本。 ","categorie":"代码管理-案例与推荐实践-iOS/Android/PC项目典型规则设置"},{"route":"/docs/code-management/best_practices/server_front_practice.html","content":" 前端 后台项目典型规则设置前端 后台类项目一般只关注最新版本，不会同时维护多个版本，适合采用像 特性分支 GitHub 的工作流，即分支开发 主干发布的模式。落地到Coding代码管理中，典型分支规则如下所示。 分支类型设置 分支类型 命名规则 设置建议 备注 开发分支 dev . 非保护分支，开启分支自动同步 分支自动删除。 按团队实情决定是否要求绑定需求单。 Bugfix分支 bugfix . 非保护分支，不开启分支自动同步，开启分支自动删除 按团队实情决定是否要求绑定bug单。 临时分支 temp . 非保护分支，不开启分支自动同步，不开启分支自动删除，不要求绑定TAPD 非必须，如无使用场景可不建该类型。用于某些预研 临时验证等，并且不允许合入主干 通过 MR约束 限制 。 MR约束设置 请注意，MR约束要么不配置，如果配置的话需要考虑全面。 允许开发分支和bugfix分支合入主干，不允许临时分支合入主干 如果其他分支间也有MR的场景，可适当添加规则。 分支版本管理设置前端 后台项目一般不开启分支版本管理，所有分支展示在同一个分支列表中。 ","categorie":"代码管理-案例与推荐实践-前端/后台项目典型规则设置"},{"route":"/docs/code-management/features/associate_ci_template.html","content":" 关联CI模板 关联CI模板 的作用在于建立相关仓库的某个或某些分支类型与流水线模板的关联，从而达到拉分支时自动创建流水线的目的。流水线信息会记录到分支信息中 在 分支管理 页面可查看 。 作为建立关联的前提之一，您需要有相应的流水线模板，如果还没有，则需要先创建，可参考 持续集成相关的手册 。 关联CI模板列表 新建CI模板关联有两种方式可以新建分支类型与CI模板的关联 方式一 点击右上方 新建关联 按钮。方式二 点击现有关联右方的 复制 按钮，复制后再做调整。选项说明 模板名称 当前关联设置的名称，建议尽量简洁。 选择仓库 对所有启用分支工作流的仓库生效还是只对部分仓库生效。 适用版本范围 一般选择 所有版本 ，也可以选择仅对某个或某几个版本生效。 覆盖分支类型 即哪些分支新建后创建流水线，可以选择一个或多个分支类型。 CI平台 创建哪个CI平台的流水线，目前支持 CodingCI 。 是否立即启动 如果启用，则创建流水线之后立即触发一次，即使还没有代码更新。 创建方式 YAML配置 基于YAML定义来创建流水线。此处填写YAML文件在代码库中的相对路径。 已有CI模板配置 从已定义的流水线模板选择，将基于该模板创建流水线。 已有CI任务 选择已存在的流水线。该选择不会创建新流水线，而总是将流水线信息记录到分支详情中，适用于一条流水线监听某个类型所有分支的场景。 关联CI模板 编辑CI模板关联点击现有关联右方的 编辑 按钮进行调整。 删除CI模板关联点击现有关联右方的 删除 按钮进行删除。删除关联只是取消了拉相关分支时自动创建流水线的关系，不会影响流水线模板或已有流水线。","categorie":"代码管理-功能介绍-关联CI模板"},{"route":"/docs/code-management/features/branch_rules.html","content":" 分支规则设置本章介绍的分支规则设置加上关联CI模板 配置分支流程等设置一起构成了 分支工作流 规范，从多方面促进团队建立一致的研发模式。 初始化Git工作流 代码管理 内置了业界常见的一些Git工作流，如GitHub工作流 GitLab工作流 分为持续发布和版本发布两类 等，定义了相关分支类型及命名规则 关联TAPD单的要求 自动同步的设定 MR约束规则等，可通过查看详情了解更多细节。对一个新项目来说，您可以选择以内置工作流进行初始化，也可以选择自定义设置，根据需要添加规则。 内置工作流只是提供了一套预设的规则，初始化之后仍然可以就实际情况做规则调整。操作过程 点击 代码管理 工作流设置 ，未设置过分支工作流的项目会看到预设Git工作流的介绍 已设置过的则会看到相关设置项 。这里我们可以决定采用某一个内置工作流进行初始化还是自定义设置 即 使用内置工作流 处选 否 。 初始化Git工作流 查看 设置分支规则点击 代码管理 工作流设置 ，在 分支规则 页面可以管理分支类型 MR约束 以及其他一些功能选项。 分支类型在这里可以定义不同用途的分支类型，命名规范支持正则表达式 例如 dev . 。每个分支类型可以按实际需要选择启用更多特性。分支类型支持排序，靠前的拥有更高优先级，如果多个分支类型的命名规则有重合，则以高优先级的为准。 应避免不同类型出现命名规则重合的情况，否则团队日常使用上容易造成混乱。 分支类型界面如下所示 主干 是个特殊的类型，不可编辑，并且不在此处指定名称，以代码仓库启用分支工作流时指定的主干为准。 查看分支规则 分支类型选项说明 分支类型名称 团队定义的分支类型，如 开发分支 bugfix分支 临时分支 等。 分支命名规则 定义该类型分支的特征，支持正则表达式，如 dev . bugfix . temp . 等。 是否创建为保护分支 开启后，该类型新建的分支将设成保护分支。一般只有特殊类型 如发布分支 才选择开启，目常开发类型分支一般不开启。 TAPD需求单 是否要求分支必须绑定TAPD需求单，如果是，则没绑定TAPD单的分支将被锁定，补充绑定后解锁。 TAPDBUG单 是否要求分支必须绑定TAPD缺陷单，如果是，则没绑定TAPD单的分支将被锁定，补充绑定后解锁。 请注意，如果要求分支绑定TAPD单，则需要在 项目协同 中关联TAPD项目，有关操作请参考 帮助中心 中 项目协同 内容。 自动同步源分支更新 如果启用，则每日 2 00 4 00点之间 自动从源分支同步代码，如有更新并且没有冲突则自动提交，如有冲突则通知分支责任人。启用的时候可以选择是否尽量以Gitfast forward方式做同步。 如果分支缺少源分支信息，则不做自动同步，例如本地创建后push的分支无法确认来源分支。 自动删除已合入分支 如果启用，则符合条件的分支将被自动删除，避免旧分支一直累积导致代码库分支庞杂。 分支类型属性 分支类型属性 添加分支类型 点击右上方 分支类型 按钮，根据需要输入或选择分支类型选项后，点击确定创建新分支类型。 编辑分支类型 在分支类型界面，点击右方 编辑 按钮，可以查看或编辑分支类型选项。 删除分支类型 在分支类型界面，点击右方 删除 选项将删除分支类型。该操作应谨慎考虑。 关于录入存量分支 默认情况下， 分支工作流 只关注新创建的分支，已存在的分支不会展示在 分支管理 界面上。如果要将存量的 符合命名规范的分支录入进来，可以点击具体分支类型右方的 存量录入 选项。可以选择录入的同时是否为分支创建CI流水线。这里有个前提条件，即该分支类型与CI模板建立了关联，相关操作可参考 关联CI模板 章节。 分支类型操作 存量分支录入 MR约束 MR约束 作用是限制哪些类型的分支允许合入目标分支，不符合规则的MR将被自动阻塞。 MR约束 并不总是必须的，但假如项目团队想做更细致的规范，该功能就可以派上用场。例如，我们允许 开发分支 和 bugfix分支 合入主干，而预研性质的 临时分支 则不允许，那么我们可以设置这样的 MR约束 规则。 MR约束 请注意，假如您要设置 MR约束 ，则请把 所有 允许的规则都列上，避免规则不全导致意外的阻塞。例如，假设 bugfix分支 除了合入主干，还可能往 开发分支 发起MR，则我们还需要添加一条允许 bugfix分支 合入 开发分支 的约束规则。 其他设置 分支版本管理 启用后， 分支管理 界面支持划分版本 如1.0.0，1.0.1 ，分支归属到具体某个版本中。 存量分支管理 默认情况下，分支规则只限制新分支，不关注项目接入之前就已存在的分支。启用当前选项后，项目接入之前就已存在的分支也将被监听，当存量分支有提交时，将按分支规则进行规范检查，如不符合，分支将被冻结。因此，请谨慎启用。 忽略未定义的分支类型 默认情况下，所有新分支都将按照分支命名规则进行匹配，无法归入任一分支类型的分支将被视为 异常分支 且会被平台所冻结，从而无法正常推送更新。启用当前选项后，平台会直接忽略此类不匹配任何分支类型的分支，对其不进行任何操作。 大多数情况下，该选项不启用，因为启用后将同允许使用不符合规范的分支，会在一定程度上降低团队规范。 分支规则其他选项 ","categorie":"代码管理-功能介绍-分支规则设置"},{"route":"/docs/code-management/features/branch_usage.html","content":" 分支管理 分支列表介绍取决于管理员是否开启 分支版本管理 ， 分支管理 列表展示有所不同。当没有开启 分支版本管理 时 当开启 分支版本管理 时 管理版本适用于管理员开启了 分支版本管理 的情形，如未开启则没有版本的概念。 添加版本点击 版本 栏处的 按钮添加版本。 填写相关信息 版本 分支版本名称，如 1.0.0 1.1.0 。 周期 计划的周期。 状态 标记状态。 TAPD版本 迭代 非必填。可以绑定TAPD项目的版本或迭代，绑定后，分支详情中点击关联TAPD单时将展示绑定版本 迭代的需求单和bug单。 该选项有个前提条件，需要在 项目协同 中关联TAPD项目，有关操作请参考 帮助中心 中 项目协同 内容。 编辑 删除版本点击 版本 栏下方 查看所有版本 ，在具体版本右侧操作 编辑 或 删除 。 尽量避免删除版本，因为删除后，原属于该版本的分支将变成无版本归属状态。 新建分支一般开发人员只本地创建分支后push到远端，并不需要到 分支管理 页面来新建。 分支管理 页面新建分支操作如下。点击界面上的 创建分支 按钮，填写分支信息，点击 确定 创建。 版本 分支归属于哪个版本。 未开启分支版本管理时不出现该选项 分支类型 要新建哪种分支。 操作类型 常用的是 创建新分支 。如果有旧分支要录入，可以选择 登记已有分支 。 代码库 即在哪个代码库中新建分支。 源分支 基于哪条分支的最新提交来创建新分支。 分支名称 顾名思义，但要注意符合分支类型命名规则。 分支别名 别名注释，非必填。 分支成员 非必填，较少用，对于保护分支才有意义。 继续创建分支 支持一次创建多条分支。 TAPD需求 新分支关联TAPD需求单，非必填。 TAPD缺陷单 新分支关联TAPDbug单，非必填。 查看分支在 分支管理 页面，点击具体分支的名称可以进入分支详情。分支详情中可以查看分支基本信息 关联TAPD单 查看关联的CI流水线 自动同步的记录等。 删除分支在 分支管理 页面，点击具体分支右侧的 删除 可以删除分支。 请注意 删除分支将真正地从代码库中删除分支，删除之前请务必确认分支已不再需要。 关于异常分支在 分支管理 页面，分支分类中有一个特殊分类 异常分支 ，不符合命名规范或缺少必须绑定的TAPD单的分支将出现在这里。点击分支名称可以查看其详情或补充信息。 ","categorie":"代码管理-功能介绍-分支管理"},{"route":"/docs/code-management/features/flow_records.html","content":" 流程单如果项目管理员配置了分支流程，则相关流程记录将出现在 代码管理 流程单 页面中。 查看所有流程单打开 代码管理 流程单 后，默认显示的是所有流程记录。 如果管理员没有配置分支流程，则此处列表为空。点击具体的一条记录可以查看详情。 查看需要自己审批的流程单切换到 待我审批 可以查看需要自己审批的流程单，点击流程单右侧 前往审批 进入审批界面。 ","categorie":"代码管理-功能介绍-流程单"},{"route":"/docs/code-management/features/flow_setup.html","content":" 流程设置 流程设置 允许项目团队在必要的时候为分支拉取或合流过程增加一些自定义环节，例如审批或者触发特殊流水线等，以满足团队的相关管控要求。 注 该模块目前仅支持增加审批和触发Coding流水线，其他功能需谨慎使用。以下通过示例来说明添加审批和触发流水线是怎样设置的。 添加 编辑流程点击 流程设置 右上方的 分支流程 可以添加流程 如果要编辑现有流程，则点击已有流程右侧的 编辑 按钮。 基本信息 流程名称 填写易于表达用途的名称 流程类型 该流程在分支创建时或者特定类型分支发起MR时执行 目标分支类型 对于 拉取 的流程，此处指拉出该类型的分支时执行流程 对于 合入 的流程，此处指出现往该类型分支发起的MR时执行流程。 流程配置起初存在的是系统内置的步骤，例如 开始 创建分支及CI任务 ，其内容不可变，但可以在其前后适当添加一些步骤。可以点击 创建步骤 来添加一个新步骤，这次我们将在创建分支之前添加一个审批环节。 刚创建的步骤默认是作审批用的，我们只需要其属性中填写步骤名称和责任人类型 即谁来审批 。审批人可以选择OA角色 如直属leader Coding项目角色 如项目管理员 提单人 具体人名，根据需要设置。 点击 开始 和 创建分支及CI任务 之间的连线，删除该连线。然后点击左侧工具栏的 连接 ，从 开始 步骤拖动到 审批 步骤，建立一条 开始 到 审批 的连线。执行相同的操作，建立一条 审批 到 创建分支及CI任务 的连线。然后点击 保存 ，到这里我们就为创建分支添加了一个前置审批步骤。其结果如下所示 如果我们需要的只是添加审批环节，那么配置到此就结束了。作为演示目的，我们再为该流程最后添加一个触发流水线的步骤，例如触发一个专门用于数据收集的流水线。点击 创建步骤 添加一个新步骤，不过这里我们再切换步骤类型为 工具步骤 。 属性设置处填写步骤名称以及责任人类型，此处责任人不需要审批，一般可选提单人或项目管理员。 在步骤工具处，工具选择 启动CODING CI流水线 ，然后填写流水线ID，其他选项一般不用改动，然后点击 确认 。 点击左侧工具栏的 连接 ，建立一条 创建分支及CI任务 到 数据处理 示例工具步骤 的连线。然后点击流程配置界面下方的 保存 。至此，我们为拉 发布分支 的流程添加了一个前置审批步骤以及一个后置数据处理步骤。其结果如下所示 如果想为MR合入的流程添加一下额外步骤，操作跟上述类似，按需添加步骤并调整步骤间关系就可以了。 效果示例当相关类型有新分支创建时，流程审批人会收到类似如下的企业微信消息提醒，可以点击链接进入审批。除此之外，也可以在 代码管理 流程单 处找到 待我审批 的记录。 如果分支是先创建后push到工蜂的，则在审批通过前分支将被锁定 设为保护分支并清理权限 审批时可以决定是否通过，如不通过则流程结束。 审批通过后流程将按设定的步骤往下执行，例如 ","categorie":"代码管理-功能介绍-流程设置"},{"route":"/docs/code-management/features/repo_management.html","content":" 代码库主要功能涉及代码库及凭证的登记管理 代码库详情查看 开启或取消分支工作流等。 行文中可能会用到术语 代码库 仓库 ，在 代码管理 中，两者意义等同。 登记仓库登记仓库是使用分支工作流 代码分析 持续集成等功能的前置步骤，一处登记，多处使用，避免重复登记或导入的操作。已支持的仓库来源 工蜂内网 git.code.oa.com 工蜂社区版 git.code.tencent.com 工蜂合作版 git.tencent.com 操作过程 进入Coding项目后，点击左侧 代码管理 代码库 ，点击 登记代码库 。 来源 选择目标仓库类型，目前多数是 工蜂 。 认证 为避免密码过期造成影响，建议您尽量选择 OAuth 认证 根据实际需要也可以采用 用户名 密码 或 SSH Token 的认证方式。考虑到仓库可能会使用到分支工作流，或者在持续集成中设置仓库事件触发，建议用权限较高的身份 如Master或Owner 来完成登记。 代码库 选择仓库或粘贴仓库URL。通过点击 新增 可以一次性登记多个仓库。点击 确认 完成登记。 登记新仓库 删除仓库登记在 代码库 列表，点击仓库右则的 删除 按钮，即可删除仓库登记。此处删除的是登记的记录，不会真正删除仓库。 请注意 删除仓库登记后，所有用到该登记信息的任务都将缺少认证而失败 因此，在删除之前请务必谨慎确认清楚。 代码库列表 为仓库启用或取消 分支工作流 我们可以为具体仓库启用 分支工作流 ，启用后，该仓库将受 分支工作流 相关规则管控。建议将 分支工作流 相关规则提前告知团队成员，然后再对仓库启用 分支工作流 ，避免沟通不及时带来影响。如果确认某仓库要启用 分支工作流 ，可以在 代码管理 代码库 界面中 分支工作流 一列进行启用。 代码库列表 启用分支工作流的同时需指定仓库的主干，主干信息在后续有特别用途，如在 分支管理 中跨越多版本 作为界面上拉分支的源分支等。 启用分支工作流 如果您看到以下提示，说明当前项目还没有配置好 分支工作流 相关规则，请先参考 分支规则设置 做好相关设置。 未配置好分支规则 查看仓库详情在 代码库 列表，点击仓库名称或右侧编辑按钮可以进入仓库详情页。在详情页中可以查看仓库的基础信息 分支工作流的启用情况 认证信息等，在此处也可以启用 取消分支工作流，管理认证信息。 仓库详情 管理认证信息在仓库详情页中可以新增 编辑或删除认证信息。需要注意的是，某些变更可能会导致现有任务失败，例如删除了认证或更改为权限更小的身份。","categorie":"代码管理-功能介绍-代码库"},{"route":"/docs/code-management/quick_start/first_step.html","content":" 快速接入本文通过一个典型的场景来向大家快速展示 代码管理 基本功能的使用。 示例 我们有个后端项目 Python语言 ，希望借助 代码管理 建立团队的分支工作流，拉分支时自动创建CI流水线，开发分支每日自动从父分支同步代码，分支合流后过一段时间自动删除。 行文中可能会用到术语 代码库 仓库 ，在 代码管理 中，两者意义等同。 登记代码库进入Coding项目后，点击左侧 代码管理 代码库 ，点击 登记代码库 。来源选择 工蜂 ，采用OAuth认证，选择目标代码库之后点击 确认 。 注 因为后续 分支工作流 设置涉及代码库管理和webhook注册等，认证的身份需要是Master或Owner。另外，如果只是为了登记后其他功能模块 如代码分析 能够拉到代码，那么到这一步就行了，后续步骤不用进行，并且认证身份可以不用有管理权限。 登记新仓库 设置分支工作流 初始化Git工作流点击 代码管理 工作流设置 ，未设置过分支工作流的项目会看到预设Git工作流的介绍，已设置过的则会看到相关设置项。 代码管理 内置了业界常见的一些Git工作流，如GitHub工作流 GitLab工作流 分为持续发布和版本发布两类 等，定义了相关分支类型及命名规则 关联TAPD单的要求 自动同步的设定 MR约束规则等，可通过查看详情了解更多细节。用户可以选择以内置工作流进行初始化，也可以选择自定义设置，根据需要添加规则。这里我们采用自定义设置。 初始化Git工作流 查看 设置分支规则 分支类型 点击 代码管理 工作流设置 ，在 分支规则 页面可以查看 编辑 增加或删除分支类型。分支命名规则支持正则表达式 如 dev . 。 主干 是个特殊的类型，不可编辑，并且不在此处指定名称，以代码仓库启用分支工作流时指定的主干为准。最终我们的分支类型如下所示，我们划分了 开发分支 bugfix分支 临时分支 。 查看分支规则 通过编辑可以细化具体分支类型的设置，如新建分支时是否为保护分支 是否要求绑定TAPD单 是否启用一些辅助自动工具等。请注意，如果要求分支绑定TAPD单，则需要在 项目协同 中关联TAPD项目，有关操作请参考 帮助中心 中 项目协同 内容。 分支类型基本信息 某些类型我们选择启用辅助工具进行每日同步以及合流后自动删除。 分支类型辅助工具 MR约束 MR约束 作用是限制哪些类型的分支允许合入目标分支，不符合规则的MR将被自动阻塞。 MR约束 并不总是必须的，但假如项目团队想做更细致的规范，该功能就可以派上用场。例如，我们允许 开发分支 和 bugfix分支 合入主干，而预研性质的 临时分支 则不允许，那么我们可以设置这样的 MR约束 规则。 MR约束 请注意，假如您要设置 MR约束 ，则请把 所有 允许的规则都列上，避免规则不全导致意外的阻塞。例如，假设 bugfix分支 除了合入主干，还可能往 开发分支 发起MR，则我们还需要添加一条允许 bugfix分支 合入 开发分支 的约束规则。 关联CI模板关联CI模板是建立分支类型与流水线模板的关联，实现拉分支时能够自动创建相关的持续集成流水线，并将流水线信息记录到分支信息中 在 分支管理 页面可查看 。该步骤并不是必须的，如果当前项目没这方面需求，可以不设置。作为建立关联的前提之一，您需要有相应的流水线模板，如果还没有，则需要先创建，可参考 持续集成相关的手册 。这里我们来新建一个CI模板的关联。部分选项说明 选择仓库 对所有启用分支工作流的仓库生效还是只对部分仓库生效。 适用版本范围 一般选择 所有版本 。 覆盖分支类型 即哪些分支新建后创建流水线，这里我们选 开发分支 和 bugfix分支 。 创建方式 选 已有CI模板配置 ，并选择目标流水线模板。 关联CI模板 目标代码库启用 分支工作流 经过前面的环节，我们已经登记了代码仓库，配置好了 分支工作流 相关规则。到目前为止， 分支工作流 对代码库不会带来任何影响。这是预期中的，因为有些代码库只是为了登记凭证以便访问代码，并不想受该项目的 分支工作流 管控。如果我们确认某代码库要启用 分支工作流 管控，可以在 代码管理 代码库 界面中启用。 代码库列表 指定代码库的主干信息，点击 确认 。 启用分支工作流 效果示例 拉分支自动创建流水线当创建符合命名规范的分支时，例如本地创建分支后push到工蜂， 代码管理 分支管理 中将自动划归分支类型，并创建CI流水线，流水线信息可在分支详情中查看。 分支CI任务 不符合规则的分支被锁定当创建的分支不符合分支规则时，分支将被锁定并归为 异常分支 ，相关开发将收到邮件和企业微信提示，根据提示进行改正。常见的原因及应对方式 分支命名不符合规范 重新创建符合规范的分支。 分支未绑定TAPD需求或bug单 在分支详情中关联TAPD需求或bug单，之后分支自动变成正常状态。 分支名不符合规范 未被允许的分支类型往主干MR时被阻塞例如 临时分支 不在允许的 MR约束 之列，当 临时分支 向主干发起MR时，该MR将被自动阻塞。 MR不被允许的demo ","categorie":"代码管理-快速入门-快速接入"}]